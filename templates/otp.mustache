{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template auth_twilio/otp

    TODO describe template tel

    Example context (json):
    {
    }
}}
<div class="rui-login-layout rui-login-layout-simple rui-login-layout--1">
    <div class="rui-login-box">
        <div class="rui-login-content">
            <div class="rui-loginpage-intro">
                <div class="rui-loginpage-intro-logo">
                    <a href="{{url}}">
                        <h2>{{#str}} dalail, auth_twilio {{/str}}</h2>
                    </a>
                </div>
            </div>
            <div class="rui-login-form">
                <form id="otp-form" onsubmit="process(event)">
                    <label for="code">{{#str}} otp, auth_twilio {{/str}}<span class="text-danger">*</span></label>
                    <div id="otp" class="d-flex d-flex-row justify-content-between">
                        <input id="1" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required autofocus>
                        <input id="2" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required >
                        <input id="3" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required >
                        <input id="4" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required >
                        <input id="5" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required >
                        <input id="6" style="width:3.3rem" maxlength="1" oninput="this.value=this.value.replace(/[^0-9]/g,'');" type="text" required >
                    </div>
                    <small id="codeHelp" class="form-text text-muted">{{#str}} otphelp, auth_twilio, {{phone}} {{/str}}</small>
                    <input type="submit" value="{{#str}} verify, auth_twilio {{/str}}" class="btn btn-lg btn-primary btn-block mt-3">
                </form>
            </div>
        </div>
    </div>
</div>

<script>

function process(event) {
    event.preventDefault();

    let otpForm   = document.querySelector('#otp-form');
    let digit1    = document.getElementById('1').value;
    let digit2    = document.getElementById('2').value;
    let digit3    = document.getElementById('3').value;
    let digit4    = document.getElementById('4').value;
    let digit5    = document.getElementById('5').value;
    let digit6    = document.getElementById('6').value;
    let code      = digit1 + digit2 + digit3 + digit4 + digit5 + digit6;

    let codeInput      = createInput(
        'code',
        'hidden',
        code
    );

     let phoneInput   = createInput(
        'phone',
        'hidden',
        '{{phone}}'
    );

    otpForm.appendChild(codeInput);
    otpForm.appendChild(phoneInput);
    otpForm.method = "POST";
    otpForm.action = "{{url}}";

    otpForm.submit();
}

function createInput(name, type, value){
    let codeInput   = document.createElement('input');
    codeInput.type  = type || 'text';
    codeInput.name  = name;
    codeInput.value = value;
    return codeInput;
}

function OTPInput() {
  const inputs = document.querySelectorAll('#otp > *[id]');
  console.log(inputs);
  for (let i = 0; i < inputs.length; i++) {
    inputs[i].addEventListener('keydown', function(event) {
      if (event.key === "Backspace") {
        inputs[i].value = '';
        if (i !== 0)
          inputs[i - 1].focus();
      } else {
        if (i === inputs.length - 1 && inputs[i].value !== '') {
          return true;
        } else if (event.keyCode > 47 && event.keyCode < 58) {
          inputs[i].value = event.key;
          if (i !== inputs.length - 1)
            inputs[i + 1].focus();
          event.preventDefault();
        } else if (event.keyCode > 64 && event.keyCode < 91) {
          inputs[i].value = String.fromCharCode(event.keyCode);
          if (i !== inputs.length - 1)
            inputs[i + 1].focus();
          event.preventDefault();
        }
      }
    });
  }
}

OTPInput();

</script>