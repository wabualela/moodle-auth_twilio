{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template auth_twilio/tel_form

    TODO describe template tel

    Example context (json):
    {
    }
}}
<div class="rui-login-layout rui-login-layout-simple rui-login-layout--1">
    <div class="rui-login-box">
        <div class="rui-login-content">
            <div class="rui-loginpage-intro">
                <div class="rui-loginpage-intro-logo">
                    <a href="{{url}}">
                        <h2>{{#str}} whatsapp, auth_twilio {{/str}}</h2>
                    </a>
                </div>
            </div>
            <div class="rui-login-form">
                <form onsubmit="process(event)" id="login-form">
                        <input id="tel" name="tel" type="tel" autocomplete="tel" class="form-control" required>
                    <input name="sesskey" type="hidden" value="{{sesskey}}">
                    <button id="btn" type="submit"class="btn btn-lg btn-primary btn-block mt-3">
                        {{#str}} validate, auth_twilio {{/str}}
                    </button>
                    <small id="valid-msg" class="hidden form-text text-success">{{#str}} valide, auth_twilio {{/str}}</small>
                    <small id="error-msg" class="hidden form-text text-danger"></small>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/intl-tel-input@19.5.5/build/js/intlTelInput.min.js"></script>
<script>
const loginForm     = document.querySelector('#login-form');
const telInputField = document.querySelector("#tel");
const btn           = document.querySelector("#btn");
const errorMsg      = document.querySelector("#error-msg");
const validMsg      = document.querySelector("#valid-msg");

const errorMap = [
    "Invalid number",
    "Invalid country code",
    "Too short",
    "Too long",
];

const info = document.querySelector(".alert-info");

const telInput = window.intlTelInput(telInputField, {
    initialCountry: "sa",
    utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@19.5.5/build/js/utils.js",
});

function process(event) {
    event.preventDefault();
    loginForm.method = "POST";
    loginForm.action = "{{url}}";
    telInputField.value = telInput.getNumber();
    loginForm.submit();
}

const reset = () => {
  telInputField.classList.remove("border-danger");
  errorMsg.innerHTML = "";
  errorMsg.classList.add("hidden");
  validMsg.classList.add("hidden");
  btn.removeAttribute('disabled')
};

const showError = (msg) => {
  telInputField.classList.add("border-danger");
  errorMsg.innerHTML =errorMap[msg];
  errorMsg.classList.remove("hidden");
  btn.setAttribute('disabled', true)
};

telInputField.addEventListener('keyup', () => {
  setTimeout(() =>{
    reset();
    if (!telInputField.value.trim()) {
        showError("Required");
    } else if (telInput.isValidNumberPrecise()) {
        validMsg.classList.remove("hide");
    } else {
        const errorCode = telInput.getValidationError();
        const msg = errorMap[errorCode] || "Invalid number";
        console.log(msg);
        showError(msg);
    }
  }, 500);
});

telInputField.addEventListener('change', reset);
telInputField.addEventListener('keyup', reset);
</script>