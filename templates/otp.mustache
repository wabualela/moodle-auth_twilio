{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template auth_twilio/otp

    TODO describe template tel

    Example context (json):
    {
        "phone": "string"
    }
}}
<style>
    #code {
        padding-left: 1ch;
        background: repeating-linear-gradient(90deg, dimgray 0, dimgray 1ch, transparent 0, transparent 1.5ch) 1ch 100%/ 9ch 2px no-repeat;
        font: 5ch droid sans mono, consolas, monospace;
        letter-spacing: .5ch;
        border: 0;
        box-shadow: none;
        outline: none;
        width: 10.5ch;
        margin: 0;
        display: block;
        margin: 1em auto;
    }
</style>
<div class="rui-login-layout rui-login-layout-simple rui-login-layout--1">
    <div class="rui-login-box">
        <div class="rui-login-content">
            <div class="rui-loginpage-intro">
                <div class="rui-loginpage-intro-logo">
                    <a href="{{url}}">
                        <h2>{{#str}} dalail, auth_twilio {{/str}}</h2>
                    </a>
                </div>
                 {{#error}}
                    <div class="alert alert-danger" role="alert">
                        {{error}}
                    </div>
                {{/error}}
            </div>
            <div class="rui-login-form">
                <form id="otp-form" onsubmit="handleSubmit(event)">
                    <label for="code">{{#str}} otp, auth_twilio {{/str}}<span class="text-danger">*</span></label>
                    <input type="text" name="code" id="code" maxlength="6" dir="ltr" placeholder="000000" required>
                    <small id="codeHelp" class="form-text text-muted">{{#str}} otphelp, auth_twilio {{/str}} <span dir="ltr">{{phone}}</span></small>
                    <input type="submit" value="{{#str}} verify, auth_twilio {{/str}}" class="btn btn-lg btn-primary btn-block mt-3">
                    <p class="py-3 text-center font-weight-medium">
                        {{#str}} resendtext, auth_twilio {{/str}}
                        <button type="button" onclick="HandleResend(this)" class="btn btn-link">
                            {{#str}} resendbtn, auth_twilio {{/str}}
                        </button>
                    </p>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
function HandleResend(element) {

    let resend_count =  sessionStorage.getItem("resend_count");

    if(resend_count == null) {
        sessionStorage.setItem("resend_count", 1);
        let count = 30;
        element.disable = true;
       let resendInterval = setInterval(() => {
            if (count > 0) {
                element.innerText = count--;
            } else {
                clearInterval(resendInterval); // Clear interval when countdown reaches 0
                element.disabled = false;
                element.innerText = "{{#str}} resendbtn, auth_twilio {{/str}}";
            }
        }, 1000)
        window.location.reload();
    } else if(resend_count == 1) {
        sessionStorage.setItem("resend_count", 2);
        let count = 60;
        element.disable = true;
        let resendInterval = setInterval(() => {
            if (count > 0) {
                element.innerText = count--;
            } else {
                clearInterval(resendInterval);
                element.disabled = false;
                element.innerText = "{{#str}} resendbtn, auth_twilio {{/str}}";
            }
        }, 1000)
        window.location.reload();
    } else if(resend_count == 2) {
        sessionStorage.setItem("resend_count", 3);
        let count = 90;
        element.disable = true;
        let resendInterval = setInterval(() => {
             if (count > 0) {
                element.innerText = count--;
            } else {
                clearInterval(resendInterval);
                element.disabled = false;
                element.innerText = "{{#str}} resendbtn, auth_twilio {{/str}}";
            }
        }, 1000)
        window.location.reload();
    } else if(resend_count > 2 ) {
        sessionStorage.removeItem("resend_count");
        element.hidden = true;
    }

}

function handleSubmit(event) {
    event.preventDefault();

    let otpForm   = document.querySelector('#otp-form');
    let code      = document.querySelector('#code');

    otpForm.appendChild(
        createInput(
        'phone',
        'hidden',
        '{{phone}}')
    );
    otpForm.method = "POST";
    otpForm.action = "{{url}}";

    otpForm.submit();
}

function createInput(name, type, value){
    let codeInput   = document.createElement('input');
    codeInput.type  = type || 'text';
    codeInput.name  = name;
    codeInput.value = value;
    return codeInput;
}

</script>